apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mnist-test
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  entrypoint: mnist-test
  ServiceAccountName: default
  templates:
  - name: mnist-test
    inputs:
      artifacts:
      # Check out the master branch of the argo repo and place it at /src
      # revision can be anything that git checkout accepts: branch, commit, tag, etc.
      - name: argo-source
        path: /src
        git:
          repo: https://github.com/mnmainguy/AIOps.git
          revision: "master"
    container:
      image: mmainguy/mnist-test:latest
      command: [sh, -c]
      args: ["cd /src/mnist_example; pip install requests retrying kubernetes pytest;
      mkdir ~/.aws
      cat <<EOF > ~/.aws/config
      [default]
      aws_access_key_id=$AWS_ACCESS_KEY
      aws_secret_access_key=$AWS_SECRET_KEY
      region=us-west-2
      EOF;
      filecount=`aws s3 ls s3://aiops-train/export --recursive|wc -l`;
      echo $filecount;
      until [[ ${filecount} -gt 1 ]]; do sleep 3; filecount=`aws s3 ls s3://aiops-train/export --recursive|wc -l`; done;
      python predict_test.py| grep '1 xpassed';
      aws s3 sync s3://aiops-train/export s3://aiops-prod/export;"]
      env:
        - name: AWS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-creds
              key: awsAccessKeyID
        - name: AWS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aws-creds
              key: awsSecretAccessKey
    activeDeadlineSeconds: 300  