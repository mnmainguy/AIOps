{
  global: {},
  components: {
    train: {
      batchSize: 100,
      secretKeyRefs: 'AWS_ACCESS_KEY_ID=aws-creds.awsAccessKeyID,AWS_SECRET_ACCESS_KEY=aws-creds.awsSecretAccessKey',
      envVariables: 'S3_ENDPOINT=s3.us-west-2.amazonaws.com,AWS_ENDPOINT_URL=http://s3.us-west-2.amazonaws.com,AWS_REGION=us-west-2,BUCKET_NAME=aiops-s3,S3_USE_HTTPS=0,S3_VERIFY_SSL=0',
      exportDir: 's3://aiops-s3/export',
      image: 'docker.io/mmainguy/minst-train',
      learningRate: '0.01',
      modelDir: 's3://aiops-s3/model',
      name: 'mnist-train',
      numPs: 0,
      numWorkers: 0,
      secret: '',
      trainSteps: 200,
    },
    "mnist-deploy-gcp": {
      defaultCpuImage: 'tensorflow/serving:1.11.1',
      defaultGpuImage: 'tensorflow/serving:1.11.1-gpu',
      deployHttpProxy: 'false',
      enablePrometheus: 'true',
      gcpCredentialSecretName: 'user-gcp-sa',
      httpProxyImage: '',
      injectIstio: 'false',
      modelBasePath: 'gs://kubeflow-examples-data/mnist',
      modelName: 'mnist',
      name: 'mnist-deploy-gcp',
      numGpus: '0',
      versionName: 'v1',
    },
    "mnist-deploy-aws": {
      defaultCpuImage: 'tensorflow/serving:1.11.1',
      defaultGpuImage: 'tensorflow/serving:1.11.1-gpu',
      deployHttpProxy: 'false',
      enablePrometheus: 'true',
      httpProxyImage: 'gcr.io/kubeflow-images-public/tf-model-server-http-proxy:v20180723',
      injectIstio: 'false',
      modelBasePath: 's3://aiops-s3/export/',
      modelName: 'mnist',
      name: 'mnist-deploy-aws',
      numGpus: '0',
      s3AwsRegion: 'us-west-2',
      s3Enable: 'true',
      s3Endpoint: 's3.us-west-2.amazonaws.com',
      s3SecretAccesskeyidKeyName: 'awsAccessKeyID',
      s3SecretName: 'aws-creds',
      s3SecretSecretaccesskeyKeyName: 'awsSecretAccessKey',
      s3UseHttps: 'false',
      s3VerifySsl: 'false',
      versionName: 'v1',
    },
    "mnist-service": {
      enablePrometheus: 'true',
      injectIstio: 'false',
      modelName: 'mnist',
      name: 'mnist-service',
      serviceType: 'ClusterIP',
      trafficRule: 'v1:100',
    },
    tensorboard: {
      envVariables: 'GOOGLE_APPLICATION_CREDENTIALS=/var/secrets/user-gcp-sa.json',
      image: 'tensorflow/tensorflow:1.11.0',
      logDir: 'gs://example/to/model/logdir',
      name: 'tensorboard',
      secret: '',
      secretKeyRefs: '',
    },
    "web-ui": {
      containerPort: 5000,
      image: 'docker.io/mmainguy/mnist-ui',
      name: 'web-ui',
      replicas: 1,
      servicePort: 80,
      type: 'LoadBalancer',
    },
  },
}