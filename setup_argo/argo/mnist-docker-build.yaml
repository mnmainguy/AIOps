apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mnist-docker-build
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  entrypoint: docker-build
  templates:
  - name: docker-build
    inputs:
      artifacts:
      # Check out the master branch of the argo repo and place it at /src
      # revision can be anything that git checkout accepts: branch, commit, tag, etc.
      - name: argo-source
        path: /src
        git:
          repo: https://github.com/mnmainguy/AIOps.git
          revision: "master"
    container:
      image: docker:17.10
      command: [sh, -c]
      args: ["until docker ps; do sleep 3; done; cd /src/mnist_example; 
            echo $DOCKER_HOST;
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD; 
            docker build . -f Dockerfile.model -t mmainguy/mnist-train; 
            docker push mmainguy/mnist-train"]
      env:
      - name: DOCKER_HOST               # the docker daemon can be access on the standard port on localhost
        value: 127.0.0.1
      - name: DOCKER_LOGIN
        valueFrom:
          secretKeyRef:
            name: docker-creds
            key: dockerLogin
      - name: DOCKER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: docker-creds
            key: dockerPassword
    sidecars:
    - name: dind
      image: docker:17.10-dind          # Docker already provides an image for running a Docker daemon
      securityContext:
        privileged: true                # the Docker daemon can only run in a privileged container
      # mirrorVolumeMounts will mount the same volumes specified in the main container
      # to the sidecar (including artifacts), at the same mountPaths. This enables
      # dind daemon to (partially) see the same filesystem as the main container in
      # order to use features such as docker volume binding.
      mirrorVolumeMounts: true